{"version":3,"sources":["pages/Home.js","components/MaskList.js","components/Header.js","pages/About.js","pages/FindPlace.js","App.js","serviceWorker.js","index.js"],"names":["BackgroundBlock","styled","div","MainBlock","MainTitle","MainText","ButtonBlock","PolicyInfoButton","button","CurrentPositionButton","Home","href","target","rel","to","TableBlock","columns","title","dataIndex","key","render","remain_stat","color","created_at","stores","data-lat","lat","data-lng","lng","MaskList","useState","setStores","loading","setLoading","myLat","setMyLat","myLng","setMyLng","useEffect","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","axios","get","response","data","console","log","fetchData","style","width","height","display","justifyContent","alignItems","tip","size","fontSize","dataSource","HeaderBlock","HomeLink","Link","Header","About","MapContent","FindPlace","script","document","createElement","async","src","head","appendChild","onload","kakao","maps","load","infowindow","InfoWindow","zIndex","mapContainer","getElementById","mapOption","center","LatLng","level","map","Map","displayMarker","place","marker","Marker","y","x","event","addListener","setContent","place_name","open","services","Places","categorySearch","status","pagination","Status","OK","i","length","useMapBounds","id","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.31b66c66.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst BackgroundBlock = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: dodgerblue;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MainBlock = styled.div`\n  width: 1000px;\n  height: 500px;\n`;\n\nconst MainTitle = styled.div`\n  width: 100%;\n  height: 60%;\n  color: white;\n  font-size: 5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MainText = styled.div`\n  width: 100%;\n  height: 40%;\n  font-size: 1rem;\n  font-weight: 600;\n  color: white;\n  padding: 30px;\n  box-sizing: border-box;\n  text-align: center;\n`;\n\nconst ButtonBlock = styled.div`\n  width: 500px;\n  height: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PolicyInfoButton = styled.button`\n  width: 200px;\n  height: 50px;\n  font-size: 1.25rem;\n  margin: 20px;\n  border-style: none;\n  border-radius: 25px;\n  background-color: white;\n  box-shadow: 1px 3px 4px 1px rgba(0, 0, 0, 0.3);\n\n  a {\n    color: dodgerblue;\n    text-decoration: none;\n  }\n`;\n\nconst CurrentPositionButton = styled.button`\n  width: 200px;\n  height: 50px;\n  font-size: 1.25rem;\n  margin: 20px;\n  border-style: none;\n  border-radius: 25px;\n  background-color: royalblue;\n  box-shadow: 1px 3px 4px 1px rgba(0, 0, 0, 0.3);\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n`;\n\nfunction Home() {\n  return (\n    <>\n      <BackgroundBlock>\n        <MainBlock>\n          <MainTitle>CHECK MASK</MainTitle>\n          <MainText>\n            <p>\n              체크마스크는 현재 접속위치를 기준으로 반경 1km 이내에 있는 공적\n              마스크 판매점 정보를 제공합니다.\n            </p>\n            <p>\n              공적 마스크 구매를 위한 자세한 정보는 하단의 마스크 정책 안내에서\n              확인하세요.\n            </p>\n            <p>\n              공공데이터포털의 공적 마스크 판매 정보 Open API에서 데이터를\n              제공받았습니다.\n            </p>\n          </MainText>\n        </MainBlock>\n        <ButtonBlock>\n          <PolicyInfoButton>\n            <a\n              href=\"http://blog.naver.com/kfdazzang/221839489769\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              마스크정책 안내\n            </a>\n          </PolicyInfoButton>\n          <CurrentPositionButton>\n            <Link to=\"/about\">마스크 찾기</Link>\n          </CurrentPositionButton>\n        </ButtonBlock>\n      </BackgroundBlock>\n    </>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Tag } from 'antd';\nimport styled from 'styled-components';\nimport { Spin } from 'antd';\nimport axios from 'axios';\n\nconst TableBlock = styled.div`\n  width: 100vw;\n  height: 100vh;\n  padding: 50px;\n  box-sizing: border-box;\n`;\n\nconst columns = [\n  {\n    title: '이름',\n    dataIndex: 'name',\n    key: 'name'\n  },\n  {\n    title: '주소',\n    dataIndex: 'addr',\n    key: 'addr'\n  },\n  {\n    title: '재고현황',\n    key: 'remain_stat',\n    dataIndex: 'remain_stat',\n    render: remain_stat => (\n      <span>\n        {remain_stat === 'empty' ? (\n          <Tag color={'#868e96'} key={remain_stat}>\n            품절\n          </Tag>\n        ) : remain_stat === 'few' ? (\n          <Tag color={'#fa5252'} key={remain_stat}>\n            부족\n          </Tag>\n        ) : remain_stat === 'some' ? (\n          <Tag color={'#fab005'} key={remain_stat}>\n            보통\n          </Tag>\n        ) : remain_stat === 'plenty' ? (\n          <Tag color={'#40c057'} key={remain_stat}>\n            충분\n          </Tag>\n        ) : (\n          '재고정보 없음'\n        )}\n      </span>\n    )\n  },\n  {\n    title: '업데이트 시간',\n    dataIndex: 'created_at',\n    key: 'created_at',\n    render: created_at => <span>{created_at || '업데이트 정보 없음'}</span>\n  },\n  {\n    title: '길찾기',\n    key: 'findMap',\n    render: stores => (\n      <span>\n        <a\n          href=\"/map\"\n          target=\"_blank\"\n          data-lat={stores.lat}\n          data-lng={stores.lng}\n        >\n          지도에서 확인\n        </a>\n      </span>\n    )\n  }\n];\n\n// const data = [\n//   {\n//     \"addr\": \"경기도 용인시 기흥구 구성로 88 (언남동)\",\n//     \"code\": \"31891179\",\n//     \"created_at\": \"2020/03/12 17:30:00\",\n//     \"lat\": 37.2941687,\n//     \"lng\": 127.1189735,\n//     \"name\": \"언남현대사약국\",\n//     \"remain_stat\": \"empty\",\n//     \"stock_at\": \"2020/03/12 09:03:00\",\n//     \"type\": \"01\"\n//   },\n// ]\n\nfunction MaskList() {\n  const [stores, setStores] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const [myLat, setMyLat] = useState(null);\n  const [myLng, setMyLng] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      (function findPosition() {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          setMyLat(position.coords.latitude);\n          setMyLng(position.coords.longitude);\n        });\n      })();\n      try {\n        const response = await axios.get(\n          `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${myLat}&lng=${myLng}&m=1000`\n        );\n        setStores(response.data.stores);\n      } catch (e) {\n        console.log(e);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [myLat, myLng]);\n\n  if (loading === true) {\n    return (\n      <TableBlock\n        style={{\n          width: '100vw',\n          height: '100vh',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <Spin\n          tip=\"데이터를 불러오는 중입니다...\"\n          size=\"large\"\n          style={{ fontSize: '1rem' }}\n        ></Spin>\n      </TableBlock>\n    );\n  }\n\n  if (!stores) {\n    return null;\n  }\n\n  return (\n    <TableBlock>\n      <Table columns={columns} dataSource={stores} />\n    </TableBlock>\n  );\n}\n\nexport default MaskList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst HeaderBlock = styled.div`\n  width: 100vw;\n  height: 70px;\n  background-color: dodgerblue;\n  display: flex;\n  align-items: center;\n  padding: 20px;\n`;\n\nconst HomeLink = styled(Link)`\n  font-size: 2rem;\n  color: white;\n\n  &:hover {\n    color: white;\n  }\n`;\n\nfunction Header() {\n  return (\n    <HeaderBlock>\n      <HomeLink to=\"/\">Check Mask</HomeLink>\n    </HeaderBlock>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport MaskList from '../components/MaskList';\nimport Header from '../components/Header';\n\nfunction About() {\n  return (\n    <>\n      <Header />\n      <MaskList />\n    </>\n  );\n}\n\nexport default About;\n","/*global kakao*/\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst MapContent = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nfunction FindPlace() {\n  const [myLat, setMyLat] = useState(null);\n  const [myLng, setMyLng] = useState(null);\n\n  (function findPosition() {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      setMyLat(position.coords.latitude);\n      setMyLng(position.coords.longitude);\n    });\n  })();\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.async = true;\n    script.src =\n      'https://dapi.kakao.com/v2/maps/sdk.js?appkey=cb14b8a5b876e7dcc8520ae77c164925&autoload=false&libraries=services';\n    document.head.appendChild(script);\n\n    script.onload = () => {\n      kakao.maps.load(() => {\n        // 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\n        var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\n\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div\n          mapOption = {\n            center: new kakao.maps.LatLng(myLat, myLng), // 지도의 중심좌표\n            level: 3 // 지도의 확대 레벨\n          };\n\n        // 지도를 생성합니다\n        var map = new kakao.maps.Map(mapContainer, mapOption);\n\n        // 장소 검색 객체를 생성합니다\n        var ps = new kakao.maps.services.Places(map);\n\n        // 카테고리로 약국을 검색합니다\n        ps.categorySearch('PM9', placesSearchCB, { useMapBounds: true });\n\n        // 키워드 검색 완료 시 호출되는 콜백함수 입니다\n        function placesSearchCB(data, status, pagination) {\n          if (status === kakao.maps.services.Status.OK) {\n            for (var i = 0; i < data.length; i++) {\n              displayMarker(data[i]);\n            }\n          }\n        }\n\n        // 지도에 마커를 표시하는 함수입니다\n        function displayMarker(place) {\n          // 마커를 생성하고 지도에 표시합니다\n          var marker = new kakao.maps.Marker({\n            map: map,\n            position: new kakao.maps.LatLng(place.y, place.x)\n          });\n\n          // 마커에 클릭이벤트를 등록합니다\n          kakao.maps.event.addListener(marker, 'click', function() {\n            // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n            infowindow.setContent(\n              '<div style=\"padding:5px;font-size:12px;\">' +\n                place.place_name +\n                '</div>'\n            );\n            infowindow.open(map, marker);\n          });\n        }\n      });\n    };\n  }, [myLat, myLng]);\n\n  return <MapContent id=\"map\" />;\n}\n\nexport default FindPlace;\n\n// 33.450701,126.570667\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport FindPlace from './pages/FindPlace';\n\nfunction App() {\n  return (\n    <div>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/about/\" component={About} />\n      <Route path=\"/map/\" component={FindPlace} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}